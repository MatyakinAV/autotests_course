# Задача со ЗВЁЗДОЧКОЙ. Решать НЕ обязательно.
# Программа получает на вход натуральное число num.
# Программа должна вывести другое натуральное число, удовлетворяющее условиям:
# Новое число должно отличаться от данного ровно одной цифрой
# Новое число должно столько же знаков как исходное
# Новое число должно делиться на 3
# Новое число должно быть максимально возможным из всех таких чисел
# Например (Ввод --> Вывод) :
#
# 379 --> 879
# 15 --> 75
# 4974 --> 7974

def max_division_by_3(num):
    new_num = 0
    lst = list(map(int, str(num)))  # делаем список
    lst1 = []  # чтобы не портить основной список
    k = 0  # переменная для првоерки что отличается на 1 знак
    for i in range(0, len(lst)):  # ходим по индексам списка
        if k == 1:  # если уже поменяли одну цифру то заканчиваем балаган
            break
        elif lst[i] == 9:  # если 9 то двигаемся на след индекс
            continue
        elif lst[i] < 9:  # если меньше 9 подбираем цифру
            for j in range(9, lst[i], -1):  # начинаем с 9 и вниз подставлять цифру
                lst1 = lst.copy()
                lst1.pop(i)
                lst1.insert(i, j)
                new_num = int(''.join(map(str, lst1)))  # собираем обратно в число
                if new_num % 3 == 0:  # если делится на 3 без остатка
                    k = 1  # записываем что поменяли одну цифру , чтобы больше не заходить
                    break
                else:
                    continue
    return new_num


# Ниже НИЧЕГО НЕ НАДО ИЗМЕНЯТЬ


data = [
    379, 810, 981, 4974, 996, 9000, 15, 0, 9881, 9984, 9876543210, 98795432109879543210
]

test_data = [
    879, 870, 987, 7974, 999, 9900, 75, 9, 9981, 9987, 9879543210, 98798432109879543210
]

for i, d in enumerate(data):
    assert max_division_by_3(d) == test_data[i], f'С набором {d} есть ошибка, не проходит проверку'
    print(f'Тестовый набор {d} прошёл проверку')
print('Всё ок')
